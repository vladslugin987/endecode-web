# Production Dockerfile for Railway/Cloud deployment
FROM gocv/opencv:4.8.0 as backend-builder

WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Tidy and build
RUN go mod tidy
RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -o photo-processor-web ./cmd/web

# Frontend builder stage
FROM node:18-alpine as frontend-builder

WORKDIR /app/web/frontend

# Copy package files
COPY web/frontend/package.json ./
RUN npm install

# Copy frontend source and build
COPY web/frontend/ .
RUN npm run build

# Final production stage
FROM gocv/opencv:4.8.0

# Install ca-certificates for HTTPS requests
RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates && rm -rf /var/lib/apt/lists/*

# Create app user
RUN groupadd --gid 1001 appuser && \
    useradd --uid 1001 --gid appuser --shell /bin/bash --create-home appuser

WORKDIR /app

# Copy built backend
COPY --from=backend-builder /app/photo-processor-web .

# Copy built frontend
COPY --from=frontend-builder /app/web/frontend/dist ./web/frontend/dist

# Create required directories
RUN mkdir -p /app/data/{photos,processed,temp,uploads} && \
    chown -R appuser:appuser /app

USER appuser

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/ || exit 1

# Start the application
CMD ["./photo-processor-web"] 