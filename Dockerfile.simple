# Simplified Dockerfile for fast Railway deployment
FROM node:18-alpine as frontend-builder

WORKDIR /app

# Copy package files
COPY photo-processing-server/web/frontend/package.json photo-processing-server/web/frontend/package-lock.json ./
RUN npm ci --only=production

# Copy frontend source and build
COPY photo-processing-server/web/frontend/ .
RUN npm run build

# Backend stage - use pre-built OpenCV image
FROM gocv/opencv:4.8.0

WORKDIR /app

# Copy go mod files
COPY photo-processing-server/go.mod photo-processing-server/go.sum ./
RUN go mod download

# Copy backend source
COPY photo-processing-server/ .

# Build backend
RUN CGO_ENABLED=1 go build -o photo-processor-web ./cmd/web

# Copy built frontend
COPY --from=frontend-builder /app/dist ./web/frontend/dist

# Create required directories
RUN mkdir -p /app/data/{photos,processed,temp,uploads}

# Expose port
EXPOSE 8080

# Start the application
CMD ["./photo-processor-web"] 